{"ast":null,"code":"var _jsxFileName = \"/Users/dhruvs437/Desktop/Assignment/frontend/src/pages/Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"../styles/login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [data, setData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const handleChange = e => {\n    let name = e.target.name;\n    let val = e.target.value;\n    setData(prevState => ({\n      ...prevState,\n      [name]: val\n    }));\n  };\n  const login = () => {\n    const postData = () => {\n      //checking email,password pattern using regex\n      if (!emailRegex.test(email)) {\n        notifyA(\"Invalid email\");\n        return;\n      }\n      //sending data to server\n      fetch(`${API_URL}/signin`, {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email: email,\n          password: password\n        })\n      }).then(res => res.json()).then(data => {\n        //will check the if any error from backend and then pop it to display using notifyA\n        if (data.error) {\n          notifyA(data.error);\n        } else {\n          notifyB(\"Signed in successfully\");\n          // console.log(data)\n          localStorage.setItem(\"jwt\", data.token);\n          // console.log(data.user._id);\n          localStorage.setItem(\"user\", JSON.stringify(data.user));\n          let z = JSON.parse(localStorage.getItem(\"user\"));\n          console.log(z);\n          setUserLogin(true);\n          navigate(\"/\");\n        }\n      });\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"Login\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"email\",\n          value: data.email,\n          onChange: handleChange,\n          placeholder: \"123@gmail.com\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"Password\",\n          value: data.password,\n          onChange: handleChange,\n          placeholder: \"********\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn\",\n        onClick: login,\n        children: \"login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"e+rnJoauGN4xfWpvf2Z3iRqH7CA=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","_s","data","setData","email","password","handleChange","e","name","target","val","value","prevState","login","postData","emailRegex","test","notifyA","fetch","API_URL","method","headers","body","JSON","stringify","then","res","json","error","notifyB","localStorage","setItem","token","user","z","parse","getItem","console","log","setUserLogin","navigate","id","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/dhruvs437/Desktop/Assignment/frontend/src/pages/Login.jsx"],"sourcesContent":["import React,{useState} from 'react'\nimport \"../styles/login.css\";\nconst Login = () => {\n    const [data,setData] = useState({email:\"\",password:\"\"});\n    const handleChange = (e)=>{\n        let name = e.target.name;\n        let val = e.target.value;\n        setData(prevState => ({\n            ...prevState,\n            [name]: val,\n        }));\n    }\n    const login = ()=>{\n        const postData = () => {\n            //checking email,password pattern using regex\n            if (!emailRegex.test(email)) {\n              notifyA(\"Invalid email\");\n              return;\n            }\n            //sending data to server\n            fetch(`${API_URL}/signin`, {\n              method: \"post\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                email: email,\n                password: password,\n              }),\n            })\n              .then((res) => res.json())\n              .then((data) => {\n                //will check the if any error from backend and then pop it to display using notifyA\n                if (data.error) {\n                  notifyA(data.error);\n                } else {\n                  notifyB(\"Signed in successfully\");\n                  // console.log(data)\n                  localStorage.setItem(\"jwt\",data.token)\n                  // console.log(data.user._id);\n                  localStorage.setItem(\"user\",JSON.stringify(data.user));\n                  let z = JSON.parse(localStorage.getItem(\"user\"));\n                  console.log(z);\n                  setUserLogin(true)\n                  navigate(\"/\");\n                }\n              });\n          };\n    }\n  return (\n    <div id=\"Login\">\n      <div className=\"container\">\n        <div className=\"box\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            type=\"text\"\n            name=\"email\"\n            value={data.email}\n            onChange={handleChange}\n            placeholder=\"123@gmail.com\"\n          />\n        </div>\n        <div className=\"box\">\n          <label htmlFor=\"password\">Password:</label>\n          <input\n            type=\"text\"\n            name=\"Password\"\n            value={data.password}\n            onChange={handleChange}\n            placeholder=\"********\"\n          />\n        </div>\n        <div className=\"btn\" onClick={login}>login</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}